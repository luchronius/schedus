'use client';

import { useState, useEffect }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from 'react';
import { useSession }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from 'next-auth/react';
import { useMortgageData }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from '@/hooks/useMortgageData';
import { useMortgageTracking }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from '@/hooks/useMortgageTracking';
import { 
  calculateCurrentState, 
  buildMortgageHistory, 
  calculateTotalPrepaymentImpact,
  type MortgageHistoryPoint,
  type CurrentMortgageState 
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from '@/utils/mortgageTracking';
import { CreateMortgageSnapshotParams, CreateMortgagePaymentParams }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} from '@/lib/database';

interface MortgageTrackingDashboardProps {
  calculationId?: number;
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

export default function MortgageTrackingDashboard({ calculationId: propCalculationId }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}: MortgageTrackingDashboardProps) {
  const { data: session }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} = useSession();
  const { savedCalculations: mortgageCalculations, deleteCalculation }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} = useMortgageData();
  
  const [selectedCalculationId, setSelectedCalculationId] = useState<number | null>(
    propCalculationId || (mortgageCalculations?.length > 0 ? mortgageCalculations[0]?.id : null) || null
  );
  
  const [showAddSnapshot, setShowAddSnapshot] = useState(false);
  const [showAddPayment, setShowAddPayment] = useState(false);
  const [showSettings, setShowSettings] = useState(false);
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);
  const [calculationToDelete, setCalculationToDelete] = useState<number | null>(null);

  const {
    snapshots,
    payments,
    settings,
    loading,
    error,
    addSnapshot,
    addPayment,
    updateSettings,
    getCurrentState,
    calculatePrepaymentImpact,
    refetch
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} = useMortgageTracking({ 
    calculationId: selectedCalculationId || 0 
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});

  const [currentState, setCurrentState] = useState<CurrentMortgageState | null>(null);
  const [history, setHistory] = useState<MortgageHistoryPoint[]>([]);
  const [prepaymentImpact, setPrepaymentImpact] = useState<any>(null);

  // Update derived data when base data changes
  useEffect(() => {
    if (snapshots.length > 0 || payments.length > 0) {
      setHistory(buildMortgageHistory(snapshots, payments, settings));
      
      if (settings) {
        const state = calculateCurrentState(snapshots, payments, settings);
        setCurrentState(state);
        
        const impact = calculateTotalPrepaymentImpact(
          payments,
          settings.originalPrincipal,
          state.interestRate,
          state.nextPaymentAmount,
          settings.originalTerm
        );
        setPrepaymentImpact(impact);
      }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}, [snapshots, payments, settings]);

  if (!session) {
    return (
      <div className="max-w-4xl mx-auto p-6">
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <p className="text-yellow-800">Please sign in to access your mortgage tracking dashboard.</p>
        </div>
      </div>
    );
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

  if (loading) {
    return (
      <div className="max-w-4xl mx-auto p-6">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded mb-4"></div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            {[...Array(3)].map((_, i) => (
              <div key={i}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} className="h-32 bg-gray-200 rounded"></div>
            ))}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          </div>
        </div>
      </div>
    );
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

  return (
    <div className="max-w-6xl mx-auto p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">Mortgage Tracking Dashboard</h1>
        <p className="text-gray-600">Complete mortgage management to replace your bank's interface</p>
      </div>

      {error && (
        <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
          <p className="text-red-800">{error}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}</p>
        </div>
      )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* No Mortgage Calculations Message */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {mortgageCalculations && mortgageCalculations.length === 0 && (
        <div className="mb-6 p-6 bg-blue-50 border border-blue-200 rounded-lg text-center">
          <h3 className="text-lg font-semibold text-blue-900 mb-2">No Mortgage Calculations Found</h3>
          <p className="text-blue-800 mb-4">
            You need to create a mortgage calculation first before you can track it. 
          </p>
          <p className="text-blue-700">
            Go to the <strong>Payment Calculator</strong> tab to create your first mortgage calculation, 
            then return here to track your mortgage progress.
          </p>
        </div>
      )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* Mortgage Selection */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {mortgageCalculations && mortgageCalculations.length > 0 && (
        <div className="mb-6">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            {mortgageCalculations.length > 1 ? 'Select Mortgage' : 'Current Mortgage'}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          </label>
          <div className="flex gap-2">
            <select
              value={selectedCalculationId || ''}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setSelectedCalculationId(Number(e.target.value))}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              disabled={mortgageCalculations.length === 1}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
            >
              {mortgageCalculations?.map((calc) => (
                <option key={calc.id}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} value={calc.id}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}>
                  {calc.calculationName || `Mortgage ${calc.id}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}`}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} - ${calc.mortgageAmount.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                </option>
              ))}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
            </select>
            {selectedCalculationId && (
              <button
                onClick={() => {
                  setCalculationToDelete(selectedCalculationId);
                  setShowDeleteConfirm(true);
                }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
                title="Delete this mortgage calculation"
              >
                🗑️ Delete
              </button>
            )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          </div>
        </div>
      )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {selectedCalculationId && (
        <>
          {/* Current State Overview */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Current Balance</h3>
              {currentState ? (
                <div>
                  <p className="text-3xl font-bold text-blue-600 mb-2">
                    ${currentState.currentBalance.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </p>
                  <p className="text-sm text-gray-600">
                    As of {new Date().toLocaleDateString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </p>
                  <div className="mt-3 text-xs text-gray-500">
                    <p>Principal Paid: ${currentState.principalPaid.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}</p>
                    <p>Interest Paid: ${currentState.totalInterestPaid.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}</p>
                  </div>
                </div>
              ) : (
                <p className="text-gray-500">No balance data available</p>
              )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
            </div>

            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Next Payment</h3>
              {currentState ? (
                <div>
                  <p className="text-2xl font-bold text-green-600 mb-1">
                    ${currentState.nextPaymentAmount.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </p>
                  <p className="text-sm text-gray-600 mb-2">
                    Due: {currentState.nextPaymentDate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </p>
                  <p className="text-xs text-gray-500">
                    {currentState.daysUntilPayment}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} days remaining
                  </p>
                  <p className="text-xs text-gray-500 mt-1">
                    {currentState.monthsRemaining}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} months to payoff
                  </p>
                </div>
              ) : (
                <p className="text-gray-500">Configure payment settings</p>
              )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
            </div>

            <div className="bg-white rounded-lg shadow p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">Prepayment Impact</h3>
              {prepaymentImpact ? (
                <div>
                  <p className="text-2xl font-bold text-purple-600 mb-1">
                    ${prepaymentImpact.totalInterestSaved.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </p>
                  <p className="text-sm text-gray-600 mb-2">Interest Saved</p>
                  <div className="text-xs text-gray-500">
                    <p>{prepaymentImpact.paymentCount}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} lump sum payments</p>
                    <p>${prepaymentImpact.totalPrepayments.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} total</p>
                    <p>{Math.round(prepaymentImpact.totalTimeSavedMonths)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} months saved</p>
                  </div>
                </div>
              ) : (
                <p className="text-gray-500">No prepayments recorded</p>
              )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
            </div>
          </div>

          {/* Action Buttons */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          <div className="flex flex-wrap gap-3 mb-8">
            <button
              onClick={() => setShowAddSnapshot(true)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              Record Balance Snapshot
            </button>
            <button
              onClick={() => setShowAddPayment(true)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500"
            >
              Record Payment
            </button>
            <button
              onClick={() => setShowSettings(true)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500"
            >
              Mortgage Settings
            </button>
            <button
              onClick={refetch}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500"
            >
              Refresh Data
            </button>
          </div>

          {/* Recent History */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          <div className="bg-white rounded-lg shadow p-6 mb-8">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">Recent Activity</h3>
            {history.length > 0 ? (
              <div className="space-y-3">
                {history.slice(0, 10).map((point, index) => (
                  <div key={index}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} className="flex items-center justify-between p-3 bg-gray-50 rounded">
                    <div>
                      <p className="font-medium text-gray-900">
                        {new Date(point.date).toLocaleDateString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                      </p>
                      {point.event && (
                        <p className="text-sm text-gray-600">
                          {point.event.type === 'lump_sum' ? 'Lump Sum Payment' : 'Regular Payment'}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}: 
                          ${point.event.amount.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                          {point.event.description && ` - ${point.event.description}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}`}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                        </p>
                      )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                    </div>
                    <div className="text-right">
                      <p className="font-semibold text-gray-900">
                        ${point.balance.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                      </p>
                      <p className="text-xs text-gray-500">
                        {point.interestRate.toFixed(2)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}% rate
                      </p>
                    </div>
                  </div>
                ))}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              </div>
            ) : (
              <p className="text-gray-500">No activity recorded yet. Start by adding a balance snapshot.</p>
            )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          </div>

          {/* Snapshots Table */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          <div className="bg-white rounded-lg shadow p-6">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">Balance Snapshots</h3>
            {snapshots.length > 0 ? (
              <div className="overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Balance</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Monthly Payment</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Interest Rate</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {snapshots.map((snapshot) => (
                      <tr key={snapshot.id}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {new Date(snapshot.snapshotDate).toLocaleDateString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                          ${snapshot.remainingBalance.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          ${snapshot.monthlyPayment.toLocaleString()}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {snapshot.interestRate.toFixed(2)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}%
                        </td>
                        <td className="px-6 py-4 text-sm text-gray-900">
                          {snapshot.description || '-'}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                        </td>
                      </tr>
                    ))}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
                  </tbody>
                </table>
              </div>
            ) : (
              <p className="text-gray-500">No balance snapshots recorded.</p>
            )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          </div>
        </>
      )}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* Add Snapshot Modal */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {showAddSnapshot && <AddSnapshotModal 
        onAdd={async (params) => {
          await addSnapshot(params);
          setShowAddSnapshot(false);
        }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onClose={() => setShowAddSnapshot(false)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      />}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* Add Payment Modal */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {showAddPayment && <AddPaymentModal 
        onAdd={async (params) => {
          await addPayment(params);
          setShowAddPayment(false);
        }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onClose={() => setShowAddPayment(false)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      />}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* Settings Modal */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {showSettings && <SettingsModal 
        currentSettings={settings}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onUpdate={async (params) => {
          await updateSettings(params);
          setShowSettings(false);
        }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onClose={() => setShowSettings(false)}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      />}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

      {/* Delete Confirmation Modal */}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      {showDeleteConfirm && <DeleteConfirmModal 
        calculationId={calculationToDelete}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        mortgageCalculations={mortgageCalculations}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onConfirm={async (id) => {
          const success = await deleteCalculation(id);
          if (success) {
            // If we deleted the currently selected calculation, clear selection
            if (id === selectedCalculationId) {
              setSelectedCalculationId(null);
            }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
          setShowDeleteConfirm(false);
          setCalculationToDelete(null);
        }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
        onCancel={() => {
          setShowDeleteConfirm(false);
          setCalculationToDelete(null);
        }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
      />}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
    </div>
  );
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

// Add Snapshot Modal Component
function AddSnapshotModal({ onAdd, onClose }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}: {
  onAdd: (params: Omit<CreateMortgageSnapshotParams, 'mortgageCalculationId'>) => Promise<void>;
  onClose: () => void;
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}) {
  const [formData, setFormData] = useState({
    snapshotDate: new Date().toISOString().split('T')[0],
    remainingBalance: '',
    monthlyPayment: '',
    interestRate: '',
    nextPaymentDate: '',
    description: ''
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await onAdd({
        snapshotDate: formData.snapshotDate,
        remainingBalance: parseFloat(formData.remainingBalance),
        monthlyPayment: parseFloat(formData.monthlyPayment),
        interestRate: parseFloat(formData.interestRate),
        nextPaymentDate: formData.nextPaymentDate,
        description: formData.description || undefined
      }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} catch (error) {
      console.error('Error adding snapshot:', error);
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
};

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold mb-4">Record Balance Snapshot</h3>
        <form onSubmit={handleSubmit}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700">Date</label>
            <input
              type="date"
              value={formData.snapshotDate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, snapshotDate: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Remaining Balance ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.remainingBalance}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, remainingBalance: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Monthly Payment ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.monthlyPayment}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, monthlyPayment: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Interest Rate (%)</label>
            <input
              type="number"
              step="0.01"
              value={formData.interestRate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, interestRate: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Next Payment Date</label>
            <input
              type="date"
              value={formData.nextPaymentDate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, nextPaymentDate: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Description (optional)</label>
            <input
              type="text"
              value={formData.description}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, description: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
            />
          </div>
          <div className="flex space-x-3 pt-4">
            <button
              type="submit"
              className="flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700"
            >
              Add Snapshot
            </button>
            <button
              type="button"
              onClick={onClose}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400"
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

// Add Payment Modal Component
function AddPaymentModal({ onAdd, onClose }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}: {
  onAdd: (params: Omit<CreateMortgagePaymentParams, 'mortgageCalculationId'>) => Promise<void>;
  onClose: () => void;
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}) {
  const [formData, setFormData] = useState({
    paymentDate: new Date().toISOString().split('T')[0],
    scheduledAmount: '',
    actualAmount: '',
    principalAmount: '',
    interestAmount: '',
    remainingBalance: '',
    paymentType: 'regular',
    description: '',
    isPaid: true
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await onAdd({
        paymentDate: formData.paymentDate,
        scheduledAmount: parseFloat(formData.scheduledAmount),
        actualAmount: formData.actualAmount ? parseFloat(formData.actualAmount) : undefined,
        principalAmount: formData.principalAmount ? parseFloat(formData.principalAmount) : undefined,
        interestAmount: formData.interestAmount ? parseFloat(formData.interestAmount) : undefined,
        remainingBalance: parseFloat(formData.remainingBalance),
        paymentType: formData.paymentType,
        description: formData.description || undefined,
        isPaid: formData.isPaid
      }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} catch (error) {
      console.error('Error adding payment:', error);
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
};

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto">
        <h3 className="text-lg font-semibold mb-4">Record Payment</h3>
        <form onSubmit={handleSubmit}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700">Payment Date</label>
            <input
              type="date"
              value={formData.paymentDate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, paymentDate: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Payment Type</label>
            <select
              value={formData.paymentType}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, paymentType: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
            >
              <option value="regular">Regular Payment</option>
              <option value="lump_sum">Lump Sum</option>
              <option value="extra">Extra Payment</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Scheduled Amount ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.scheduledAmount}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, scheduledAmount: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Actual Amount ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.actualAmount}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, actualAmount: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Balance After Payment ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.remainingBalance}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, remainingBalance: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Description (optional)</label>
            <input
              type="text"
              value={formData.description}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, description: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
            />
          </div>
          <div className="flex items-center">
            <input
              type="checkbox"
              id="isPaid"
              checked={formData.isPaid}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, isPaid: e.target.checked}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="h-4 w-4 text-blue-600 border-gray-300 rounded"
            />
            <label htmlFor="isPaid" className="ml-2 block text-sm text-gray-900">
              Payment completed
            </label>
          </div>
          <div className="flex space-x-3 pt-4">
            <button
              type="submit"
              className="flex-1 bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700"
            >
              Add Payment
            </button>
            <button
              type="button"
              onClick={onClose}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400"
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}

// Settings Modal Component
function SettingsModal({ currentSettings, onUpdate, onClose }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}: {
  currentSettings: any;
  onUpdate: (params: any) => Promise<void>;
  onClose: () => void;
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}) {
  const [formData, setFormData] = useState({
    paymentDayOfMonth: currentSettings?.paymentDayOfMonth?.toString() || '1',
    preferredPaymentDay: currentSettings?.preferredPaymentDay?.toString() || '',
    startDate: currentSettings?.startDate || new Date().toISOString().split('T')[0],
    originalPrincipal: currentSettings?.originalPrincipal?.toString() || '',
    originalTerm: currentSettings?.originalTerm?.toString() || ''
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await onUpdate({
        paymentDayOfMonth: parseInt(formData.paymentDayOfMonth),
        preferredPaymentDay: formData.preferredPaymentDay ? parseInt(formData.preferredPaymentDay) : undefined,
        startDate: formData.startDate,
        originalPrincipal: parseFloat(formData.originalPrincipal),
        originalTerm: parseInt(formData.originalTerm)
      }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
});
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} catch (error) {
      console.error('Error updating settings:', error);
    }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
  }

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
};

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold mb-4">Mortgage Settings</h3>
        <form onSubmit={handleSubmit}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
} className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700">Payment Day of Month (1-28)</label>
            <input
              type="number"
              min="1"
              max="28"
              value={formData.paymentDayOfMonth}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, paymentDayOfMonth: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Preferred End-of-Month Day (29-31, optional)</label>
            <input
              type="number"
              min="29"
              max="31"
              value={formData.preferredPaymentDay}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, preferredPaymentDay: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Mortgage Start Date</label>
            <input
              type="date"
              value={formData.startDate}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, startDate: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Original Principal ($)</label>
            <input
              type="number"
              step="0.01"
              value={formData.originalPrincipal}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, originalPrincipal: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700">Original Term (months)</label>
            <input
              type="number"
              value={formData.originalTerm}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              onChange={(e) => setFormData({...formData, originalTerm: e.target.value}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
})}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
              required
            />
          </div>
          <div className="flex space-x-3 pt-4">
            <button
              type="submit"
              className="flex-1 bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700"
            >
              Save Settings
            </button>
            <button
              type="button"
              onClick={onClose}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
              className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400"
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

// Delete Confirmation Modal Component
function DeleteConfirmModal({ calculationId, mortgageCalculations, onConfirm, onCancel }: {
  calculationId: number | null;
  mortgageCalculations: any[] | undefined;
  onConfirm: (id: number) => Promise<void>;
  onCancel: () => void;
}) {
  if (!calculationId) return null;

  const calculation = mortgageCalculations?.find(calc => calc.id === calculationId);
  
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-md">
        <h3 className="text-lg font-semibold text-red-900 mb-4">⚠️ Delete Mortgage Calculation</h3>
        
        <div className="mb-6">
          <p className="text-gray-700 mb-3">
            Are you sure you want to delete this mortgage calculation?
          </p>
          
          {calculation && (
            <div className="bg-gray-50 p-3 rounded border">
              <p className="font-medium">{calculation.calculationName || `Mortgage ${calculation.id}`}</p>
              <p className="text-sm text-gray-600">Amount: ${calculation.mortgageAmount?.toLocaleString()}</p>
              <p className="text-sm text-gray-600">Rate: {calculation.annualRate}%</p>
            </div>
          )}
          
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded">
            <p className="text-red-800 text-sm font-medium">⚠️ This action cannot be undone!</p>
            <p className="text-red-700 text-sm mt-1">
              All associated data including balance snapshots, payment records, and settings will be permanently deleted.
            </p>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button
            onClick={() => onConfirm(calculationId)}
            className="flex-1 bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Yes, Delete
          </button>
          <button
            onClick={onCancel}
            className="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
}
